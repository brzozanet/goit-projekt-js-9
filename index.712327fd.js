const e="bf096adfc02b1d9503cca39671f19618",t="https://image.tmdb.org/t/p/w500",a="https://api.themoviedb.org/3/",n="en-US";const d=new class{#e=[];#t=[];constructor(){const e=JSON.parse(localStorage.getItem("watched-movies")),t=JSON.parse(localStorage.getItem("queued-movies"));this.#e=e||[],this.#t=t||[]}get watched(){return this.#e}get queued(){return this.#t}isAdded(e,t){for(let a=0;a<t.length;a++)if(+t[a].id==+e.id)return!1;return!0}addToWatch(e){this.isAdded(e,this.#e)&&(this.#e.push(e),localStorage.setItem("watched-movies",JSON.stringify(this.#e)))}addToQueue(e){this.isAdded(e,this.#t)&&(this.#t.push(e),localStorage.setItem("queued-movies",JSON.stringify(this.#t)))}},i=`${a}/search/movie?api_key=${e}&query=`,s=fetch(`${a}/discover/movie?include_adult=false&include_video=false&language=${n}&page=1&sort_by=popularity.desc&api_key=${e}`).then((e=>e.json())).then((e=>console.log(e))).catch((e=>console.error(e))),o=document.getElementById("form"),r=document.getElementById("search"),c=document.querySelector(".movies-container");async function l(e){const a=await fetch(e),n=await a.json();var d;d=n.results,c.innerHTML="",d.forEach((e=>{const a=document.createElement("div");a.classList.add("card"),a.innerHTML=`\n      <div id="card" class="card">\n        <img class="card__poster" src="${t}${e.poster_path}" alt="${e.original_title}" title="${e.original_title}" />\n        <div class="card__content">\n          <div class="card__info">\n            <div class="card__title">${e.original_title}</div>\n            <div class="card__genre">${e.genres} |</div>\n            <div class="card__release">${e.release_date.slice(0,4)} |</div>\n            <div class="card__rating">Rating: ${e.vote_average}</div>\n          </div>\n        </div>\n      </div>`,c.appendChild(a)}))}l(s),o.addEventListener("submit",(e=>{e.preventDefault();const t=r.value;t&&""!==t?(l(i+t),r.value=""):window.location.reload()})),(async()=>{let i=1,s=0;const o={method:"GET",headers:{accept:"application/json",Authorization:`Bearer ${e}`}},r=document.querySelector(".show-more"),c=async t=>{try{document.querySelector(".lds-ring").style.display="inline-block";const d=await fetch(`${a}movie/popular?language=${n}&page=${t}&api_key=${e}`,o),i=await d.json();return document.querySelector(".lds-ring").style.display="none",i}catch(e){console.error(e)}},l=async()=>{try{const t=await fetch(`${a}genre/movie/list?api_key=${e}`,o);return(await t.json()).genres}catch(e){console.error(e)}};r.addEventListener("click",(async()=>{i++;const e=await l(),t=(await c(i)).results.map((t=>{const a=t.genre_ids,n=[];for(let t=0;t<a.length;t++)for(let d=0;d<e.length;d++)a[t]===e[d].id&&n.push(e[d].name);return t.genres=n,t}));u(t),i===s&&(r.style.display="hidden")}));const u=e=>{e.forEach((e=>{const a=document.createElement("div");a.className="card",a.innerHTML=`\n        <div id="card" class="card" >\n          <img class="card__poster" src="${t}${e.poster_path}" alt="${e.original_title}" title="${e.original_title}" />\n        </div>\n        <div class="card__content">\n          <div class="card__info">\n            <div class="card__title">${e.original_title}</div>\n            <div class="card__genre">${e.genres.join(", ")} |</div>\n            <div class="card__release">${e.release_date.slice(0,4)}</div>\n          </div>\n        </div>`;const n=document.querySelector("#gallery");n.appendChild(a),n.classList.remove("hiddenColor"),a.addEventListener("click",(()=>{i(e)}));const i=e=>{const a=document.querySelector(".backdrop"),i=document.querySelector(".modal__btn-close"),s=document.querySelector(".modal__photo"),o=document.querySelector(".modal__title"),r=document.querySelector(".modal__stats-vote"),c=document.querySelector(".modal__stats-votes"),l=document.querySelector(".modal__popularity"),u=document.querySelector(".modal__film-title"),_=document.querySelector(".modal__genre"),h=document.querySelector(".modal__about-text");a.classList.remove("is-hidden"),n.classList.add("hiddenColor"),s.src=`${t}${e.poster_path}`,o.innerHTML=`${e.original_title}`,r.innerHTML=`${e.vote_average}`,c.innerHTML=`${e.vote_count}`,l.innerHTML=`${e.popularity}`,u.innerHTML=`${e.original_title}`,_.innerHTML=`${e.genres.join(", ")}`,h.innerHTML=`${e.overview}`;const m=document.querySelector("#modal__button-watched"),v=document.querySelector("#modal__button-queue");m.addEventListener("click",(()=>d.addToWatch(e))),v.addEventListener("click",(()=>d.addToQueue(e))),i.addEventListener("click",(()=>{a.classList.add("is-hidden"),n.classList.remove("hiddenColor")})),window.addEventListener("keyup",(e=>{"Escape"===e.key&&a.classList.add("is-hidden")})),window.addEventListener("keyup",(e=>{"Escape"===e.key&&(a.classList.add("is-hidden"),n.classList.remove("hiddenColor"))})),window.addEventListener("click",(e=>{e.target.classList.contains("backdrop")&&(a.classList.add("is-hidden"),n.classList.remove("hiddenColor"))}))}}))};await(async()=>{const e=await l(),t=await c(i),a=t.results.map((t=>{const a=t.genre_ids,n=[];for(let t=0;t<a.length;t++)for(let d=0;d<e.length;d++)a[t]===e[d].id&&n.push(e[d].name);return t.genres=n,t}));u(a),s=t.total_pages,r.style.display=i<s?"block":"hidden"})()})();
//# sourceMappingURL=index.712327fd.js.map
