{"mappings":"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","sources":["src/js/setup.js","src/js/most-popular.js","src/js/loading-spinner.js","src/js/modal.js","src/js/search-box.js","src/js/app.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\n\nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  // const moviesPerPage = 20;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  // const moviesContainerEl = document.querySelector(\"#gallery\");\n  const showMoreButtonEl = document.querySelector(\".show-more\");\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n\n    if (currentPage < totalPages) {\n      showMoreButtonEl.style.display = \"block\";\n    } else {\n      showMoreButtonEl.style.display = \"none\";\n    }\n  };\n\n  const showMoreMovies = async () => {\n    currentPage++;\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n    popularMovies(movies);\n    if (currentPage === totalPages) {\n      showMoreButtonEl.style.display = \"none\";\n    }\n  };\n\n  showMoreButtonEl.addEventListener(\"click\", showMoreMovies);\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `<div id=\"card\" class=\"card\" >\n\n        <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${\n        movie.original_title\n      }\" title=\"${movie.original_title}\" />\n      </div>\n      <div class=\"card__content\">\n        <div class=\"card__info\">\n          <div class=\"card__title\">${movie.original_title}</div>\n          <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n          <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n        </div>\n      </div>`;\n      // const modalEL = document.getElementById(\"modalBox\");\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n\n      moviesContainerEl.appendChild(card);\n      moviesContainerEl.classList.remove(\"hidden\");\n\n      // show Modal\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n      const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        moviesContainerEl.classList.add(\"hidden\");\n        imageEl.src = `${IMG_URL}${movie.poster_path}`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        // hide Modal\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hidden\");\n        });\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hidden\");\n          }\n        });\n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hidden\");\n          }\n        });\n      };\n    });\n  };\n\n  // const genres = await fetchGenres();\n  await matchGenres();\n};\n\nfetchMostPopular();\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"inline-block\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"none\";\n};\n","export { toggleWatched, toggleQueue };\nwindow.addEventListener(\"load\", () => {\n  document\n    .querySelector(\"#modal__button-watched\")\n    .addEventListener(\"click\", toggleWatched);\n  document\n    .querySelector(\"#modal__button-queue\")\n    .addEventListener(\"click\", toggleQueue);\n});\nfunction toggleWatched() {\n  document\n    .querySelector(\"#modal__button-watched\")\n    .classList.toggle(\"button-active\");\n  if (\n    document\n      .querySelector(\"#modal__button-watched\")\n      .classList.contains(\"button-active\")\n  ) {\n    document.querySelector(\"#modal__button-watched\").textContent =\n      \"Remove from watched\";\n  } else {\n    document.querySelector(\"#modal__button-watched\").textContent =\n      \"Add to watched\";\n  }\n}\nfunction toggleQueue() {\n  document\n    .querySelector(\"#modal__button-queue\")\n    .classList.toggle(\"button-active\");\n  if (\n    document\n      .querySelector(\"#modal__button-queue\")\n      .classList.contains(\"button-active\")\n  ) {\n    document.querySelector(\"#modal__button-queue\").textContent =\n      \"Remove from queue\";\n  } else {\n    document.querySelector(\"#modal__button-queue\").textContent = \"Add to queue\";\n  }\n}\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\nconst API_URL = fetch(\n  `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc`\n)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n\nconst form = document.getElementById(\"form\");\nconst search = document.getElementById(\"search\");\nconst moviesContainerEl = document.querySelector(\"#movies-container-index\");\n\ngetMovies(API_URL);\n\nasync function getMovies(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  showMovies(data.results);\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    const { original_title, poster_path, vote_average, release_date, genres } =\n      movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    movieEl.innerHTML = `\n    <div id=\"card\" class=\"card\">\n             <img class=\"card__poster\" src=\"${IMG_URL}${\n      movie.poster_path\n    }\" alt=\"${movie.original_title}\" title=\"${movie.original_title}\" />\n           <div class=\"card__content\">\n                <div class=\"card__info\">\n                  <div class=\"card__title\">${movie.original_title}</div>\n                  <div class=\"card__genre\">${movie.genres} |</div>\n                  <div class=\"card__release\">${movie.release_date.slice(\n                    0,\n                    4\n                  )} |</div>\n                  <div class=\"card__rating\">Rating: ${movie.vote_average}</div>\n                </div>\n              </div>\n            </div>\n          `;\n\n    moviesContainerEl.appendChild(movieEl);\n  });\n}\n\nform.addEventListener(\"submit\", e => {\n  e.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    getMovies(SEARCH_API + searchTerm);\n\n    search.value = \"\";\n  } else {\n    window.location.reload();\n  }\n});\n","import \"../sass/main.scss\";\nimport { fetchMostPopular } from \"./most-popular\";\nimport { toggleWatched, toggleQueue } from \"./modal\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport \"./search-box\";\n\nfetchMostPopular();\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$1542779201f52248$export$a5868ac4057d47f8","async","currentPage","totalPages","options","method","headers","accept","Authorization","showMoreButtonEl","document","querySelector","fetchPopularData","page","style","display","response","fetch","data","json","error","console","addEventListener","movies","results","map","movie","movieGenresIds","genre_ids","matchedGenres","i","length","j","genres","id","push","name","popularMovies","forEach","card","createElement","className","innerHTML","poster_path","original_title","join","release_date","slice","moviesContainerEl","appendChild","classList","remove","modalBoxShow","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","add","src","vote_average","vote_count","popularity","overview","window","e","key","target","contains","genres1","fetchGenres","popularMoviesData","total_pages","matchGenres","$2ea800676e6f7669$export$db8da8110682733b","toggle","textContent","$2ea800676e6f7669$export$c6104e1232c627ca","$e240c31068c50c0a$var$SEARCH_API","$e240c31068c50c0a$var$API_URL","then","log","catch","err","$e240c31068c50c0a$var$form","getElementById","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","$e240c31068c50c0a$var$getMovies","url","res","movieEl","preventDefault","searchTerm","value","location","reload"],"version":3,"file":"index.d261555e.js.map"}