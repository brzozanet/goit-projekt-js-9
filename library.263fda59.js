var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},i={},r=e.parcelRequire555a;null==r&&((r=function(e){if(e in t)return t[e].exports;if(e in i){var r=i[e];delete i[e];var n={id:e,exports:{}};return t[e]=n,r.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){i[e]=t},e.parcelRequire555a=r);var n=r("3479m"),a=(n=r("3479m"),r("b374K")),d=r("g9R5y");new(0,a.UserMovies);const o=e=>{const t=document.querySelector(".backdrop"),i=document.querySelector(".modal__btn-close"),r=document.querySelector(".modal__photo"),a=document.querySelector(".modal__title"),o=document.querySelector(".modal__stats-vote"),s=document.querySelector(".modal__stats-votes"),c=document.querySelector(".modal__popularity"),l=document.querySelector(".modal__film-title"),u=document.querySelector(".modal__genre"),_=document.querySelector(".modal__about-text");t.classList.remove("is-hidden"),r.innerHTML=`<img src="${n.IMG_URL}${e.poster_path}" alt="${e.original_title}" class="modal__photo">`,a.innerHTML=`${e.original_title}`,o.innerHTML=`${e.vote_average}`,s.innerHTML=`${e.vote_count}`,c.innerHTML=`${e.popularity}`,l.innerHTML=`${e.original_title}`,_.innerHTML=`${e.overview}`;const{genre_ids:m}=e,v=m.map((e=>{const t=d.genres.find((t=>t.id===e));return t?t.name:""})).join(", ");u.innerHTML=v;const p=document.querySelector("#modal__button-watched"),y=document.querySelector("#modal__button-queue");p.classList.add("is-hidden"),y.classList.add("is-hidden"),i.addEventListener("click",(()=>{t.classList.add("is-hidden")})),window.addEventListener("keyup",(e=>{"Escape"===e.key&&t.classList.add("is-hidden")})),window.addEventListener("keyup",(e=>{"Escape"===e.key&&t.classList.add("is-hidden")})),window.addEventListener("click",(e=>{e.target.classList.contains("backdrop")&&t.classList.add("is-hidden")}))};r("7IoHk");let s=JSON.parse(localStorage.getItem("watched-movies")),c=JSON.parse(localStorage.getItem("queued-movies"));const l=document.querySelector("#library-watched"),u=document.querySelector("#library-queued");if(s&&Array.isArray(s)){(e=>{e.forEach((e=>{const t=document.createElement("div");t.className="card",t.innerHTML=`\n          <div id="card" class="card" >\n            <img class="card__poster" src="${n.IMG_URL}${e.poster_path}" alt="${e.original_title}" title="${e.original_title}" />\n          </div>\n          <div class="card__content">\n            <div class="card__info">\n              <div class="card__title">${e.original_title}</div>\n              <div class="card__genre">${e.genres} |</div>\n              <div class="card__release">${e.release_date.slice(0,4)}</div>\n            </div>\n          </div>`,t.addEventListener("click",(async()=>{o(e),await h(e.id)})),l.appendChild(t),l.classList.remove("hiddenColor")}))})(s)}else{const e=document.createElement("div");e.innerHTML='\n    <p class="library__title">\n        <strong>You have no watched movies.</strong><br /><a href="index.html">Select first movie</a> and click "Add to watched" button.\n    </p>',l.appendChild(e)}if(c&&Array.isArray(c)){(e=>{e.forEach((e=>{const t=document.createElement("div");t.className="card",t.innerHTML=`\n          <div id="card" class="card" >\n            <img class="card__poster" src="${n.IMG_URL}${e.poster_path}" alt="${e.original_title}" title="${e.original_title}" />\n          </div>\n          <div class="card__content">\n            <div class="card__info">\n              <div class="card__title">${e.original_title}</div>\n              <div class="card__genre">${e.genres} |</div>\n              <div class="card__release">${e.release_date.slice(0,4)}</div>\n            </div>\n          </div>`,t.addEventListener("click",(async()=>{o(e),await h(e.id)})),u.appendChild(t),u.classList.remove("hiddenColor")}))})(c)}else{const e=document.createElement("div");e.innerHTML='\n    <p class="library__title">\n        <strong>You have no queued movies.</strong><br /><a href="index.html">Select first movie</a> and click "Add to queue" button.\n    </p>',u.appendChild(e)}const _=document.querySelector("#button-watched"),m=document.querySelector("#button-queue"),v=document.querySelector("#library-watched"),p=document.querySelector("#library-queued"),y=document.querySelector("#library-info");_.addEventListener("click",(()=>{v.classList.remove("hidden-in-library"),p.classList.add("hidden-in-library"),y.classList.add("hidden-in-library")})),m.addEventListener("click",(()=>{v.classList.add("hidden-in-library"),p.classList.remove("hidden-in-library"),y.classList.add("hidden-in-library")}));const h=async e=>{const t={method:"GET",headers:{accept:"application/json",Authorization:`Bearer ${n.API_KEY}`}};try{const i=await fetch(`https://api.themoviedb.org/3/movie/${e}/videos?language=${n.LANGUAGE}&api_key=${n.API_KEY}`,t);if(!i.ok)throw new Error("Network response was not ok");const r=await i.json(),{results:a}=r,d=`https://www.youtube.com/embed/${a[0].key}`;document.querySelector(".modal__trailer").innerHTML=`<iframe id="modal__trailer-video" width="373" height="210" src="${d}" frameborder="0" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`,console.log(d)}catch(e){console.error(e)}};
//# sourceMappingURL=library.263fda59.js.map
