{"mappings":"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","sources":["src/js/setup.js","src/js/most-popular.js","src/js/local-storage.js","src/js/genres.js","src/js/search-box.js","src/js/loading-spinner.js","src/js/app.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport { UserMoviesWatched, UserMoviesQueued } from \"./local-storage\";\n\nconst userMoviesWatched = new UserMoviesWatched();\nconst userMoviesQueued = new UserMoviesQueued();\n\nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  // const moviesPerPage = 20;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  // const moviesContainerEl = document.querySelector(\"#gallery\");\n  const showMoreButtonEl = document.querySelector(\".show-more\");\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n    if (currentPage < totalPages) {\n      showMoreButtonEl.style.display = \"block\";\n    } else {\n      showMoreButtonEl.style.display = \"hidden\";\n    }\n  };\n\n  const showMoreMovies = async () => {\n    currentPage++;\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n    popularMovies(movies);\n    if (currentPage === totalPages) {\n      showMoreButtonEl.style.display = \"hidden\";\n    }\n  };\n\n  showMoreButtonEl.addEventListener(\"click\", showMoreMovies);\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `\n        <div id=\"card\" class=\"card\" >\n          <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${\n        movie.original_title\n      }\" title=\"${movie.original_title}\" />\n        </div>\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n          </div>\n        </div>`;\n      // const modalEL = document.getElementById(\"modalBox\");\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n\n      moviesContainerEl.appendChild(card);\n      moviesContainerEl.classList.remove(\"hiddenColor\");\n\n      // show Modal\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n      const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        moviesContainerEl.classList.add(\"hiddenColor\");\n        imageEl.src = `${IMG_URL}${movie.poster_path}`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n        const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n        \n        addWatchBtnEl.addEventListener(\"click\", () =>\n          userMoviesWatched.addToWatch(movie)\n        );\n        addQueueBtnEl.addEventListener(\"click\", () =>\n          userMoviesQueued.addToQueue(movie)\n        );\n\n        // hide Modal\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hiddenColor\");\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hiddenColor\");\n          }\n        });\n\n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hiddenColor\");\n          }\n        });\n      };\n    });\n  };\n\n  // const genres = await fetchGenres();\n  await matchGenres();\n};\n\n// fetchMostPopular();\n","export class UserMoviesWatched {\n  #watched = [];\n\n  // constructor() {\n  //   const watched = JSON.parse(localStorage.getItem(\"watched-movies\"));\n\n  //   if (watched) {\n  //     this.#watched = watched;\n  //   } else {\n  //     this.#watched = [];\n  //   }\n  // }\n\n  // get watched() {\n  //   return this.#watched;\n  // }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToWatch(element) {\n    if (this.isAdded(element, this.#watched)) {\n      this.#watched.push(element);\n      localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n    }\n  }\n}\n\nexport class UserMoviesQueued {\n  #queued = [];\n\n  // constructor() {\n  //   const queued = JSON.parse(localStorage.getItem(\"queued-movies\"));\n\n  //   if (queued) {\n  //     this.#queued = queued;\n  //   } else {\n  //     this.#queued = [];\n  //   }\n  // }\n\n  // get queued() {\n  //   return this.#queued;\n  // }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToQueue(element) {\n    if (this.isAdded(element, this.#queued)) {\n      this.#queued.push(element);\n      localStorage.setItem(\"queued-movies\", JSON.stringify(this.#queued));\n    }\n  }\n}\n","export const genres = [\n  { id: 28, name: \"Action\" },\n  { id: 12, name: \"Adventure\" },\n  { id: 16, name: \"Animation\" },\n  { id: 35, name: \"Comedy\" },\n  { id: 80, name: \"Crime\" },\n  { id: 99, name: \"Documentary\" },\n  { id: 18, name: \"Drama\" },\n  { id: 10751, name: \"Family\" },\n  { id: 14, name: \"Fantasy\" },\n  { id: 36, name: \"History\" },\n  { id: 27, name: \"Horror\" },\n  { id: 10402, name: \"Music\" },\n  { id: 9648, name: \"Mystery\" },\n  { id: 10749, name: \"Romance\" },\n  { id: 878, name: \"Science Fiction\" },\n  { id: 10770, name: \"TV Movie\" },\n  { id: 53, name: \"Thriller\" },\n  { id: 10752, name: \"War\" },\n  { id: 37, name: \"Western\" },\n];\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { genres } from \"./genres\";\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\nconst API_URL = fetch(\n  // `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc`\n  `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc&api_key=${API_KEY}`\n)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n\nconst form = document.getElementById(\"form\");\nconst search = document.getElementById(\"search\");\nconst moviesContainerEl = document.querySelector(\".movies-container\");\n\ngetMovies(API_URL);\n\nasync function getMovies(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  showMovies(data.results);\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    const {\n      original_title,\n      poster_path,\n      vote_average,\n      release_date,\n      genre_ids,\n    } = movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    const movieGenres = genre_ids\n      .map(genreId => genres.find(genre => genre.id === genreId).name)\n      .join(\", \");\n\n    movieEl.innerHTML = `\n      <div id=\"card\" class=\"card\">\n        <img class=\"card__poster\" src=\"${IMG_URL}${poster_path}\" alt=\"${original_title}\" title=\"${original_title}\" />\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${original_title}</div>\n            <div class=\"card__genre\">${movieGenres} |</div>\n            <div class=\"card__release\">${release_date.slice(0, 4)} </div>\n            \n          </div>\n        </div>\n      </div>`;\n\n    moviesContainerEl.appendChild(movieEl);\n\n    card.addEventListener(\"click\", () => {\n      modalBoxShow(movie);\n    });\n\n    const modalBoxShow = movie => {\n      const popupEl = document.querySelector(\".backdrop\");\n      const closeBtnEl = document.querySelector(\".modal__btn-close\");\n      const imageEl = document.querySelector(\".modal__photo\");\n      const titleEl = document.querySelector(\".modal__title\");\n      const voteEl = document.querySelector(\".modal__stats-vote\");\n      const votesEl = document.querySelector(\".modal__stats-votes\");\n      const popularityEl = document.querySelector(\".modal__popularity\");\n      const originalTitleEl = document.querySelector(\".modal__film-title\");\n      const genreEl = document.querySelector(\".modal__genre\");\n      const aboutEl = document.querySelector(\".modal__about-text\");\n\n      popupEl.classList.remove(\"is-hidden\");\n      moviesContainerEl.classList.add(\"hiddenColor\");\n      imageEl.src = `${IMG_URL}${movie.poster_path}`;\n      titleEl.innerHTML = `${movie.original_title}`;\n      voteEl.innerHTML = `${movie.vote_average}`;\n      votesEl.innerHTML = `${movie.vote_count}`;\n      popularityEl.innerHTML = `${movie.popularity}`;\n      originalTitleEl.innerHTML = `${movie.original_title}`;\n      genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n      aboutEl.innerHTML = `${movie.overview}`;\n\n      closeBtnEl.addEventListener(\"click\", () => {\n        popupEl.classList.add(\"is-hidden\");\n        moviesContainerEl.classList.remove(\"hiddenColor\");\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hiddenColor\");\n        }\n      });\n\n      window.addEventListener(\"click\", e => {\n        if (e.target.classList.contains(\"backdrop\")) {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hiddenColor\");\n        }\n      });\n    };\n  });\n}\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    getMovies(SEARCH_API + searchTerm);\n\n    search.value = \"\";\n  } else {\n    window.location.reload();\n  }\n});\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"inline-block\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"none\";\n};\n","import \"../sass/main.scss\";\nimport { fetchMostPopular } from \"./most-popular\";\nimport { toggleWatched, toggleQueue } from \"./modal\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport \"./search-box\";\n\nfetchMostPopular();\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$3479m","parcelRequire","$1542779201f52248$var$userMoviesWatched","watched","isAdded","element","array","i","length","id","addToWatch","this","push","localStorage","setItem","JSON","stringify","$1542779201f52248$var$userMoviesQueued","queued","addToQueue","$bc36aade2b53bb55$export$be3a0ca764f9df2b","name","$e240c31068c50c0a$var$SEARCH_API","URL","API_KEY","$e240c31068c50c0a$var$API_URL","fetch","LANGUAGE","then","response","json","console","log","catch","err","error","$e240c31068c50c0a$var$form","document","getElementById","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","querySelector","async","$e240c31068c50c0a$var$getMovies","url","res","data","movies","results","innerHTML","forEach","movie","original_title","poster_path","vote_average","release_date","genre_ids","movieEl","createElement","classList","add","movieGenres","map","genreId","find","genre","join","IMG_URL","slice","appendChild","card","addEventListener","modalBoxShow","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","remove","src","vote_count","popularity","genres","overview","window","e","key","target","contains","event","preventDefault","searchTerm","value","location","reload","currentPage","totalPages","options","method","headers","accept","Authorization","showMoreButtonEl","fetchPopularData","page","style","display","fetchGenres","movieGenresIds","matchedGenres","j","popularMovies","className","moviesContainerEl","addWatchBtnEl","addQueueBtnEl","popularMoviesData","total_pages","matchGenres"],"version":3,"file":"index.5aa301e4.js.map"}