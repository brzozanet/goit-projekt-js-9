{"mappings":"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","sources":["src/js/modal-library.js","src/js/library.js"],"sourcesContent":["import { IMG_URL } from \"./setup\";\nimport { UserMovies } from \"./local-storage\";\nimport { genres } from \"./genres\";\n\nconst userMovies = new UserMovies();\n\nexport const modalBoxShow = movie => {\n  const popupEl = document.querySelector(\".backdrop\");\n  const closeBtnEl = document.querySelector(\".modal__btn-close\");\n  const imageEl = document.querySelector(\".modal__photo\");\n  const titleEl = document.querySelector(\".modal__title\");\n  const voteEl = document.querySelector(\".modal__stats-vote\");\n  const votesEl = document.querySelector(\".modal__stats-votes\");\n  const popularityEl = document.querySelector(\".modal__popularity\");\n  const originalTitleEl = document.querySelector(\".modal__film-title\");\n  const genreEl = document.querySelector(\".modal__genre\");\n  const aboutEl = document.querySelector(\".modal__about-text\");\n\n  popupEl.classList.remove(\"is-hidden\");\n  imageEl.innerHTML = `<img src=\"${IMG_URL}${movie.poster_path}\" alt=\"${movie.original_title}\" class=\"modal__photo\">`;\n  titleEl.innerHTML = `${movie.original_title}`;\n  voteEl.innerHTML = `${movie.vote_average}`;\n  votesEl.innerHTML = `${movie.vote_count}`;\n  popularityEl.innerHTML = `${movie.popularity}`;\n  originalTitleEl.innerHTML = `${movie.original_title}`;\n  aboutEl.innerHTML = `${movie.overview}`;\n  const { genre_ids } = movie;\n  const movieGenres = genre_ids\n    .map(genreId => {\n      const genre = genres.find(genre => genre.id === genreId);\n      return genre ? genre.name : \"\";\n    })\n    .join(\", \");\n  genreEl.innerHTML = movieGenres;\n\n  const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n  const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n\n  addWatchBtnEl.classList.add(\"is-hidden\");\n  addQueueBtnEl.classList.add(\"is-hidden\");\n  //   addWatchBtnEl.addEventListener(\"click\", () => userMovies.addToWatch(movie));\n  //   addQueueBtnEl.addEventListener(\"click\", () => userMovies.addToQueue(movie));\n\n  closeBtnEl.addEventListener(\"click\", () => {\n    popupEl.classList.add(\"is-hidden\");\n  });\n\n  window.addEventListener(\"keyup\", event => {\n    if (event.key === \"Escape\") {\n      popupEl.classList.add(\"is-hidden\");\n    }\n  });\n\n  window.addEventListener(\"keyup\", event => {\n    if (event.key === \"Escape\") {\n      popupEl.classList.add(\"is-hidden\");\n    }\n  });\n\n  window.addEventListener(\"click\", event => {\n    if (event.target.classList.contains(\"backdrop\")) {\n      popupEl.classList.add(\"is-hidden\");\n    }\n  });\n};\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\n// import { UserMovies } from \"./local-storage\";\nimport { modalBoxShow } from \"./modal-library\";\nimport Notiflix from \"notiflix\";\n// import { getTrailerLink } from \"./app\";\nlet currentPage = 1;\nlet totalPages = 0;\n\nconst fetchPopularData = async page => {\n  try {\n    // showSpinner();\n    const response = await fetch(\n      `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    // hideSpinner();\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      \"Sorry, the server is not responding. Please try again later.\"\n    );\n  }\n};\n\nconst fetchGenres = async () => {\n  try {\n    const response = await fetch(`${URL}genre/movie/list?api_key=${API_KEY}`);\n    const genreNames = await response.json();\n    return genreNames.genres;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      \"Sorry, the server is not responding. Please try again later.\"\n    );\n  }\n};\n\nconst matchGenres = async () => {\n  const genres = await fetchGenres();\n  const popularMoviesData = await fetchPopularData(currentPage);\n  const movies = popularMoviesData.results.map(movie => {\n    const movieGenresIds = movie.genre_ids;\n    const matchedGenres = [];\n    for (let i = 0; i < movieGenresIds.length; i++) {\n      for (let j = 0; j < genres.length; j++) {\n        if (movieGenresIds[i] === genres[j].id) {\n          matchedGenres.push(genres[j].name);\n        }\n      }\n    }\n    movie.genres = matchedGenres;\n    return movie;\n  });\n  return movies;\n};\n\nlet watchedMovies = JSON.parse(localStorage.getItem(\"watched-movies\"));\nlet queuedMovies = JSON.parse(localStorage.getItem(\"queued-movies\"));\n\nconst watchedMoviesContainerEl = document.querySelector(\"#library-watched\");\nconst queuedMoviesContainerEl = document.querySelector(\"#library-queued\");\n\nif (watchedMovies && Array.isArray(watchedMovies)) {\n  const showWatchedMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `\n          <div id=\"card\" class=\"card\" >\n            <img class=\"card__poster\" src=\"${IMG_URL}${\n        movie.poster_path\n      }\" alt=\"${movie.original_title}\" title=\"${movie.original_title}\" />\n          </div>\n          <div class=\"card__content\">\n            <div class=\"card__info\">\n              <div class=\"card__title\">${movie.original_title}</div>\n              <div class=\"card__genre\">${movie.genres} |</div>\n              <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n            </div>\n          </div>`;\n      card.addEventListener(\"click\", async () => {\n        modalBoxShow(movie);\n        await getTrailerLink(movie.id);\n      });\n      watchedMoviesContainerEl.appendChild(card);\n      watchedMoviesContainerEl.classList.remove(\"hiddenColor\");\n    });\n  };\n  showWatchedMovies(watchedMovies);\n} else {\n  const noWatchedMovies = document.createElement(\"div\");\n  noWatchedMovies.innerHTML = `\n    <p class=\"library__title\">\n        <strong>You have no watched movies.</strong><br /><a href=\"index.html\">Select first movie</a> and click \"Add to watched\" button.\n    </p>`;\n  watchedMoviesContainerEl.appendChild(noWatchedMovies);\n}\n\nif (queuedMovies && Array.isArray(queuedMovies)) {\n  const showQueuedMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `\n          <div id=\"card\" class=\"card\" >\n            <img class=\"card__poster\" src=\"${IMG_URL}${\n        movie.poster_path\n      }\" alt=\"${movie.original_title}\" title=\"${movie.original_title}\" />\n          </div>\n          <div class=\"card__content\">\n            <div class=\"card__info\">\n              <div class=\"card__title\">${movie.original_title}</div>\n              <div class=\"card__genre\">${movie.genres} |</div>\n              <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n            </div>\n          </div>`;\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n      queuedMoviesContainerEl.appendChild(card);\n      queuedMoviesContainerEl.classList.remove(\"hiddenColor\");\n    });\n  };\n  showQueuedMovies(queuedMovies);\n} else {\n  const noQueuedMovies = document.createElement(\"div\");\n  noQueuedMovies.innerHTML = `\n    <p class=\"library__title\">\n        <strong>You have no queued movies.</strong><br /><a href=\"index.html\">Select first movie</a> and click \"Add to queue\" button.\n    </p>`;\n  queuedMoviesContainerEl.appendChild(noQueuedMovies);\n}\n\nconst watchedBtnEl = document.querySelector(\"#button-watched\");\nconst queueBtnEl = document.querySelector(\"#button-queue\");\nconst watchedDivEl = document.querySelector(\"#library-watched\");\nconst queuedDivEl = document.querySelector(\"#library-queued\");\nconst libraryInfoEl = document.querySelector(\"#library-info\");\n\nwatchedBtnEl.addEventListener(\"click\", () => {\n  watchedDivEl.classList.remove(\"hidden-in-library\");\n  queuedDivEl.classList.add(\"hidden-in-library\");\n  libraryInfoEl.classList.add(\"hidden-in-library\");\n});\n\nqueueBtnEl.addEventListener(\"click\", () => {\n  watchedDivEl.classList.add(\"hidden-in-library\");\n  queuedDivEl.classList.remove(\"hidden-in-library\");\n  libraryInfoEl.classList.add(\"hidden-in-library\");\n});\n\nconst getTrailerLink = async id => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/videos?language=${LANGUAGE}&api_key=${API_KEY}`,\n      options\n    );\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    const { results } = data;\n    const key = results[0].key;\n    const youtubeLink = `https://www.youtube.com/embed/${key}`;\n    const trailerEl = document.querySelector(\".modal__trailer\");\n    trailerEl.innerHTML = `<iframe id=\"modal__trailer-video\" width=\"373\" height=\"210\" src=\"${youtubeLink}\" frameborder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\n    console.log(youtubeLink);\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["$3479m","parcelRequire","$b374K","UserMovies","$e7f5dcb4379e869d$export$988bc7e2c1f1d15f","movie","popupEl","document","querySelector","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","classList","remove","innerHTML","IMG_URL","poster_path","original_title","vote_average","vote_count","popularity","overview","genre_ids","movieGenres","map","genreId","genre","$g9R5y","genres","find","id","name","join","addWatchBtnEl","addQueueBtnEl","add","addEventListener","window","event","key","target","contains","$9da563a3715d9237$var$watchedMovies","JSON","parse","localStorage","getItem","$9da563a3715d9237$var$queuedMovies","$9da563a3715d9237$var$watchedMoviesContainerEl","$9da563a3715d9237$var$queuedMoviesContainerEl","Array","isArray","movies","forEach","card","createElement","className","release_date","slice","async","$9da563a3715d9237$var$getTrailerLink","appendChild","showWatchedMovies","noWatchedMovies","showQueuedMovies","noQueuedMovies","$9da563a3715d9237$var$watchedBtnEl","$9da563a3715d9237$var$queueBtnEl","$9da563a3715d9237$var$watchedDivEl","$9da563a3715d9237$var$queuedDivEl","$9da563a3715d9237$var$libraryInfoEl","options","method","headers","accept","Authorization","API_KEY","response","fetch","LANGUAGE","ok","Error","data","json","results","youtubeLink","console","log","error"],"version":3,"file":"library.2853add9.js.map"}