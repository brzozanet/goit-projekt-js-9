{"mappings":"0tBAAO,MAAMA,EAAU,mCACVC,EAAU,kCACVC,EAAM,gCACNC,EAAW,O,ICHxB,IAAAC,EAAAC,EAAA,SAIA,MAAMC,EAAoB,ICJnB,MACLC,GAAW,GAgBXC,QAAQC,EAASC,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAChC,IAAKD,EAAMC,GAAGE,KAAQJ,EAAQI,GAC5B,OAAO,EAGX,OAAO,CACT,CAEAC,WAAWL,GACLM,KAAKP,QAAQC,EAASM,MAAKR,KAC7BQ,MAAKR,EAASS,KAAKP,GACnBQ,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUL,MAAKR,IAE/D,GD1BIc,EAAmB,IC6BlB,MACLC,GAAU,GAgBVd,QAAQC,EAASC,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAChC,IAAKD,EAAMC,GAAGE,KAAQJ,EAAQI,GAC5B,OAAO,EAGX,OAAO,CACT,CAEAU,WAAWd,GACLM,KAAKP,QAAQC,EAASM,MAAKO,KAC7BP,MAAKO,EAAQN,KAAKP,GAClBQ,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUL,MAAKO,IAE9D,GC7DF,MAAME,EAAa,I,cAAGC,4BAA4BrB,EAAAsB,iBAC5CC,EAAUC,MAEd,GAAGxB,EAAAqB,uEAAuErB,EAAAyB,mDAAmDzB,EAAAsB,WAE5HI,MAAKC,GAAYA,EAASC,SAC1BF,MAAKC,GAAYE,QAAQC,IAAIH,KAC7BI,OAAMC,GAAOH,QAAQI,MAAMD,KAExBE,EAAOC,SAASC,eAAe,QAC/BC,EAASF,SAASC,eAAe,UACjCE,EAAoBH,SAASI,cAAc,qBAIjDC,eAAeC,EAAUC,GACvB,MAAMC,QAAYnB,MAAMkB,GAClBE,QAAaD,EAAIf,OAKzB,IAAoBiB,IAHPD,EAAKE,QAIhBR,EAAkBS,UAAY,GAE9BF,EAAOG,SAAQC,IACb,MAAMC,eACJA,EAAcC,YACdA,EAAWC,aACXA,EAAYC,aACZA,EAAYC,UACZA,GACEL,EAEEM,EAAUpB,SAASqB,cAAc,OACvCD,EAAQE,UAAUC,IAAI,QAEtB,MAAMC,EAAcL,EACjBM,KAAIC,GAAWC,OAAOC,MAAKC,GAASA,EAAMvD,KAAOoD,IAASI,OAC1DC,KAAK,MAERX,EAAQR,UAAY,gFAEiB/C,EAAAmE,UAAUhB,WAAqBD,aAA0BA,wHAG3DA,iDACAS,qDACEN,EAAae,MAAM,EAAG,0EAM3D9B,EAAkB+B,YAAYd,GAE9Be,KAAKC,iBAAiB,SAAS,KAC7BC,EAAavB,EAAA,IAGf,MAAMuB,EAAevB,IACnB,MAAMwB,EAAUtC,SAASI,cAAc,aACjCmC,EAAavC,SAASI,cAAc,qBACpCoC,EAAUxC,SAASI,cAAc,iBACjCqC,EAAUzC,SAASI,cAAc,iBACjCsC,EAAS1C,SAASI,cAAc,sBAChCuC,EAAU3C,SAASI,cAAc,uBACjCwC,EAAe5C,SAASI,cAAc,sBACtCyC,EAAkB7C,SAASI,cAAc,sBACzC0C,EAAU9C,SAASI,cAAc,iBACjC2C,EAAU/C,SAASI,cAAc,sBAEvCkC,EAAQhB,UAAU0B,OAAO,aACzB7C,EAAkBmB,UAAUC,IAAI,eAChCiB,EAAQS,IAAM,GAAGpF,EAAAmE,UAAUlB,EAAME,cACjCyB,EAAQ7B,UAAY,GAAGE,EAAMC,iBAC7B2B,EAAO9B,UAAY,GAAGE,EAAMG,eAC5B0B,EAAQ/B,UAAY,GAAGE,EAAMoC,aAC7BN,EAAahC,UAAY,GAAGE,EAAMqC,aAClCN,EAAgBjC,UAAY,GAAGE,EAAMC,iBACrC+B,EAAQlC,UAAY,GAAGE,EAAMa,OAAOI,KAAK,QACzCgB,EAAQnC,UAAY,GAAGE,EAAMsC,WAE7Bb,EAAWH,iBAAiB,SAAS,KACnCE,EAAQhB,UAAUC,IAAI,aACtBpB,EAAkBmB,UAAU0B,OAAO,kBAGrCK,OAAOjB,iBAAiB,SAASkB,IACjB,WAAVA,EAAEC,KACJjB,EAAQhB,UAAUC,IAAI,gBAI1B8B,OAAOjB,iBAAiB,SAASkB,IACjB,WAAVA,EAAEC,MACJjB,EAAQhB,UAAUC,IAAI,aACtBpB,EAAkBmB,UAAU0B,OAAO,eACrC,IAGFK,OAAOjB,iBAAiB,SAASkB,IAC3BA,EAAEE,OAAOlC,UAAUmC,SAAS,cAC9BnB,EAAQhB,UAAUC,IAAI,aACtBpB,EAAkBmB,UAAU0B,OAAO,eACrC,GACF,CACF,GAvFJ,CAPA1C,EAAUlB,GAkGVW,EAAKqC,iBAAiB,UAAUsB,IAC9BA,EAAMC,iBAEN,MAAMC,EAAa1D,EAAO2D,MAEtBD,GAA6B,KAAfA,GAChBtD,EAAUrB,EAAa2E,GAEvB1D,EAAO2D,MAAQ,IAEfR,OAAOS,SAASC,QAAM,IFtHM1D,WAC9B,IAAI2D,EAAc,EAEdC,EAAa,EACjB,MAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAUzG,EAAAsB,YAKvBoF,EAAmBvE,SAASI,cAAc,cAE1CoE,EAAmBnE,MAAMoE,IAC7B,IGtBgBzE,SAASI,cAAc,aAC/BsE,MAAMC,QAAU,eHuBtB,MAAMnF,QAAiBH,MACrB,GAAGxB,EAAAqB,6BAA6BrB,EAAAyB,iBAAiBmF,aAAgB5G,EAAAsB,UACjE+E,GAEIzD,QAAajB,EAASC,OAE5B,OGzBcO,SAASI,cAAc,aAC/BsE,MAAMC,QAAU,OHwBflE,CACT,CAAE,MAAOX,GACPJ,QAAQI,MAAMA,EAChB,GAGI8E,EAAcvE,UAClB,IACE,MAAMb,QAAiBH,MACrB,GAAGxB,EAAAqB,+BAA+BrB,EAAAsB,UAClC+E,GAGF,aADyB1E,EAASC,QAChBkC,MACpB,CAAE,MAAO7B,GACPJ,QAAQI,MAAMA,EAChB,GAoDFyE,EAAiBnC,iBAAiB,SAvBX/B,UACrB2D,IACA,MAAMrC,QAAeiD,IAEflE,SAD0B8D,EAAiBR,IAChBrD,QAAQc,KAAIX,IAC3C,MAAM+D,EAAiB/D,EAAMK,UACvB2D,EAAgB,GACtB,IAAK,IAAI1G,EAAI,EAAGA,EAAIyG,EAAexG,OAAQD,IACzC,IAAK,IAAI2G,EAAI,EAAGA,EAAIpD,EAAOtD,OAAQ0G,IAC7BF,EAAezG,KAAOuD,EAAOoD,GAAGzG,IAClCwG,EAAcrG,KAAKkD,EAAOoD,GAAGjD,MAKnC,OADAhB,EAAMa,OAASmD,EACRhE,CAAA,IAETkE,EAActE,GACVsD,IAAgBC,IAClBM,EAAiBG,MAAMC,QAAU,aAMrC,MAAMK,EAAgBtE,IACpBA,EAAOG,SAAQC,IACb,MAAMqB,EAAOnC,SAASqB,cAAc,OACpCc,EAAK8C,UAAY,OACjB9C,EAAKvB,UAAY,qFAEoB/C,EAAAmE,UAAUlB,EAAME,qBACnDF,EAAMC,0BACID,EAAMC,qJAIeD,EAAMC,8DACND,EAAMa,OAAOI,KAAK,yDAChBjB,EAAMI,aAAae,MAAM,EAAG,6CAK/D,MAAMiD,EAAoBlF,SAASI,cAAc,YAEjD8E,EAAkBhD,YAAYC,GAC9B+C,EAAkB5D,UAAU0B,OAAO,eAInCb,EAAKC,iBAAiB,SAAS,KAC7BC,EAAavB,EAAA,IAGf,MAAMuB,EAAevB,IACnB,MAAMwB,EAAUtC,SAASI,cAAc,aACjCmC,EAAavC,SAASI,cAAc,qBACpCoC,EAAUxC,SAASI,cAAc,iBACjCqC,EAAUzC,SAASI,cAAc,iBACjCsC,EAAS1C,SAASI,cAAc,sBAChCuC,EAAU3C,SAASI,cAAc,uBACjCwC,EAAe5C,SAASI,cAAc,sBACtCyC,EAAkB7C,SAASI,cAAc,sBACzC0C,EAAU9C,SAASI,cAAc,iBACjC2C,EAAU/C,SAASI,cAAc,sBAEvCkC,EAAQhB,UAAU0B,OAAO,aACzBkC,EAAkB5D,UAAUC,IAAI,eAChCiB,EAAQS,IAAM,GAAGpF,EAAAmE,UAAUlB,EAAME,cACjCyB,EAAQ7B,UAAY,GAAGE,EAAMC,iBAC7B2B,EAAO9B,UAAY,GAAGE,EAAMG,eAC5B0B,EAAQ/B,UAAY,GAAGE,EAAMoC,aAC7BN,EAAahC,UAAY,GAAGE,EAAMqC,aAClCN,EAAgBjC,UAAY,GAAGE,EAAMC,iBACrC+B,EAAQlC,UAAY,GAAGE,EAAMa,OAAOI,KAAK,QACzCgB,EAAQnC,UAAY,GAAGE,EAAMsC,WAE7B,MAAM+B,EAAgBnF,SAASI,cAAc,0BACvCgF,EAAgBpF,SAASI,cAAc,wBAE7C+E,EAAc/C,iBAAiB,SAAS,IACtCrE,EAAkBQ,WAAWuC,KAE/BsE,EAAchD,iBAAiB,SAAS,IACtCtD,EAAiBE,WAAW8B,KAK9ByB,EAAWH,iBAAiB,SAAS,KACnCE,EAAQhB,UAAUC,IAAI,aACtB2D,EAAkB5D,UAAU0B,OAAO,kBAGrCK,OAAOjB,iBAAiB,SAASkB,IACjB,WAAVA,EAAEC,KACJjB,EAAQhB,UAAUC,IAAI,gBAI1B8B,OAAOjB,iBAAiB,SAASkB,IACjB,WAAVA,EAAEC,MACJjB,EAAQhB,UAAUC,IAAI,aACtB2D,EAAkB5D,UAAU0B,OAAO,eACrC,IAGFK,OAAOjB,iBAAiB,SAASkB,IAC3BA,EAAEE,OAAOlC,UAAUmC,SAAS,cAC9BnB,EAAQhB,UAAUC,IAAI,aACtB2D,EAAkB5D,UAAU0B,OAAO,eACrC,GACF,CACF,GACF,OA7IkB3C,WAClB,MAAMsB,QAAeiD,IACfS,QAA0Bb,EAAiBR,GAC3CtD,EAAS2E,EAAkB1E,QAAQc,KAAIX,IAC3C,MAAM+D,EAAiB/D,EAAMK,UACvB2D,EAAgB,GACtB,IAAK,IAAI1G,EAAI,EAAGA,EAAIyG,EAAexG,OAAQD,IACzC,IAAK,IAAI2G,EAAI,EAAGA,EAAIpD,EAAOtD,OAAQ0G,IAC7BF,EAAezG,KAAOuD,EAAOoD,GAAGzG,IAClCwG,EAAcrG,KAAKkD,EAAOoD,GAAGjD,MAKnC,OADAhB,EAAMa,OAASmD,EACRhE,CAAA,IAGTkE,EAActE,GACduD,EAAaoB,EAAkBC,YAE7Bf,EAAiBG,MAAMC,QADrBX,EAAcC,EACiB,QAEA,UA2H/BsB,EAAA,EI7LR","sources":["src/js/setup.js","src/js/most-popular.js","src/js/local-storage.js","src/js/search-box.js","src/js/loading-spinner.js","src/js/app.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport { UserMoviesWatched, UserMoviesQueued } from \"./local-storage\";\n\nconst userMoviesWatched = new UserMoviesWatched();\nconst userMoviesQueued = new UserMoviesQueued();\n\nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  // const moviesPerPage = 20;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  // const moviesContainerEl = document.querySelector(\"#gallery\");\n  const showMoreButtonEl = document.querySelector(\".show-more\");\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n    if (currentPage < totalPages) {\n      showMoreButtonEl.style.display = \"block\";\n    } else {\n      showMoreButtonEl.style.display = \"hidden\";\n    }\n  };\n\n  const showMoreMovies = async () => {\n    currentPage++;\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n    popularMovies(movies);\n    if (currentPage === totalPages) {\n      showMoreButtonEl.style.display = \"hidden\";\n    }\n  };\n\n  showMoreButtonEl.addEventListener(\"click\", showMoreMovies);\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `\n        <div id=\"card\" class=\"card\" >\n          <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${\n        movie.original_title\n      }\" title=\"${movie.original_title}\" />\n        </div>\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n          </div>\n        </div>`;\n      // const modalEL = document.getElementById(\"modalBox\");\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n\n      moviesContainerEl.appendChild(card);\n      moviesContainerEl.classList.remove(\"hiddenColor\");\n\n      // show Modal\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n      const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        moviesContainerEl.classList.add(\"hiddenColor\");\n        imageEl.src = `${IMG_URL}${movie.poster_path}`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n        const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n        \n        addWatchBtnEl.addEventListener(\"click\", () =>\n          userMoviesWatched.addToWatch(movie)\n        );\n        addQueueBtnEl.addEventListener(\"click\", () =>\n          userMoviesQueued.addToQueue(movie)\n        );\n\n        // hide Modal\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hiddenColor\");\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hiddenColor\");\n          }\n        });\n\n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hiddenColor\");\n          }\n        });\n      };\n    });\n  };\n\n  // const genres = await fetchGenres();\n  await matchGenres();\n};\n\n// fetchMostPopular();\n","export class UserMoviesWatched {\n  #watched = [];\n\n  // constructor() {\n  //   const watched = JSON.parse(localStorage.getItem(\"watched-movies\"));\n\n  //   if (watched) {\n  //     this.#watched = watched;\n  //   } else {\n  //     this.#watched = [];\n  //   }\n  // }\n\n  // get watched() {\n  //   return this.#watched;\n  // }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToWatch(element) {\n    if (this.isAdded(element, this.#watched)) {\n      this.#watched.push(element);\n      localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n    }\n  }\n}\n\nexport class UserMoviesQueued {\n  #queued = [];\n\n  // constructor() {\n  //   const queued = JSON.parse(localStorage.getItem(\"queued-movies\"));\n\n  //   if (queued) {\n  //     this.#queued = queued;\n  //   } else {\n  //     this.#queued = [];\n  //   }\n  // }\n\n  // get queued() {\n  //   return this.#queued;\n  // }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToQueue(element) {\n    if (this.isAdded(element, this.#queued)) {\n      this.#queued.push(element);\n      localStorage.setItem(\"queued-movies\", JSON.stringify(this.#queued));\n    }\n  }\n}\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\n// import { genres } from \"./genres\";\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\nconst API_URL = fetch(\n  // `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc`\n  `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc&api_key=${API_KEY}`\n)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n\nconst form = document.getElementById(\"form\");\nconst search = document.getElementById(\"search\");\nconst moviesContainerEl = document.querySelector(\".movies-container\");\n\ngetMovies(API_URL);\n\nasync function getMovies(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  showMovies(data.results);\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    const {\n      original_title,\n      poster_path,\n      vote_average,\n      release_date,\n      genre_ids,\n    } = movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    const movieGenres = genre_ids\n      .map(genreId => genres.find(genre => genre.id === genreId).name)\n      .join(\", \");\n\n    movieEl.innerHTML = `\n      <div id=\"card\" class=\"card\">\n        <img class=\"card__poster\" src=\"${IMG_URL}${poster_path}\" alt=\"${original_title}\" title=\"${original_title}\" />\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${original_title}</div>\n            <div class=\"card__genre\">${movieGenres} |</div>\n            <div class=\"card__release\">${release_date.slice(0, 4)} </div>\n            \n          </div>\n        </div>\n      </div>`;\n\n    moviesContainerEl.appendChild(movieEl);\n\n    card.addEventListener(\"click\", () => {\n      modalBoxShow(movie);\n    });\n\n    const modalBoxShow = movie => {\n      const popupEl = document.querySelector(\".backdrop\");\n      const closeBtnEl = document.querySelector(\".modal__btn-close\");\n      const imageEl = document.querySelector(\".modal__photo\");\n      const titleEl = document.querySelector(\".modal__title\");\n      const voteEl = document.querySelector(\".modal__stats-vote\");\n      const votesEl = document.querySelector(\".modal__stats-votes\");\n      const popularityEl = document.querySelector(\".modal__popularity\");\n      const originalTitleEl = document.querySelector(\".modal__film-title\");\n      const genreEl = document.querySelector(\".modal__genre\");\n      const aboutEl = document.querySelector(\".modal__about-text\");\n\n      popupEl.classList.remove(\"is-hidden\");\n      moviesContainerEl.classList.add(\"hiddenColor\");\n      imageEl.src = `${IMG_URL}${movie.poster_path}`;\n      titleEl.innerHTML = `${movie.original_title}`;\n      voteEl.innerHTML = `${movie.vote_average}`;\n      votesEl.innerHTML = `${movie.vote_count}`;\n      popularityEl.innerHTML = `${movie.popularity}`;\n      originalTitleEl.innerHTML = `${movie.original_title}`;\n      genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n      aboutEl.innerHTML = `${movie.overview}`;\n\n      closeBtnEl.addEventListener(\"click\", () => {\n        popupEl.classList.add(\"is-hidden\");\n        moviesContainerEl.classList.remove(\"hiddenColor\");\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hiddenColor\");\n        }\n      });\n\n      window.addEventListener(\"click\", e => {\n        if (e.target.classList.contains(\"backdrop\")) {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hiddenColor\");\n        }\n      });\n    };\n  });\n}\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    getMovies(SEARCH_API + searchTerm);\n\n    search.value = \"\";\n  } else {\n    window.location.reload();\n  }\n});\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"inline-block\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"none\";\n};\n","import \"../sass/main.scss\";\nimport { fetchMostPopular } from \"./most-popular\";\nimport { toggleWatched, toggleQueue } from \"./modal\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport \"./search-box\";\n\nfetchMostPopular();\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$3479m","parcelRequire","$1542779201f52248$var$userMoviesWatched","watched","isAdded","element","array","i","length","id","addToWatch","this","push","localStorage","setItem","JSON","stringify","$1542779201f52248$var$userMoviesQueued","queued","addToQueue","$e240c31068c50c0a$var$SEARCH_API","URL","API_KEY","$e240c31068c50c0a$var$API_URL","fetch","LANGUAGE","then","response","json","console","log","catch","err","error","$e240c31068c50c0a$var$form","document","getElementById","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","querySelector","async","$e240c31068c50c0a$var$getMovies","url","res","data","movies","results","innerHTML","forEach","movie","original_title","poster_path","vote_average","release_date","genre_ids","movieEl","createElement","classList","add","movieGenres","map","genreId","genres","find","genre","name","join","IMG_URL","slice","appendChild","card","addEventListener","modalBoxShow","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","remove","src","vote_count","popularity","overview","window","e","key","target","contains","event","preventDefault","searchTerm","value","location","reload","currentPage","totalPages","options","method","headers","accept","Authorization","showMoreButtonEl","fetchPopularData","page","style","display","fetchGenres","movieGenresIds","matchedGenres","j","popularMovies","className","moviesContainerEl","addWatchBtnEl","addQueueBtnEl","popularMoviesData","total_pages","matchGenres"],"version":3,"file":"index.3ae1e649.js.map"}