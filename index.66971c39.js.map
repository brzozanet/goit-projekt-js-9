{"mappings":"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","sources":["src/js/setup.js","src/js/app.js","src/js/local-storage.js","src/js/genres.js","src/js/search-box.js","src/js/loading-spinner.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport { UserMovies } from \"./local-storage\";\nimport \"./search-box\";\n\nconst userMovies = new UserMovies();\n\nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n\n    if (currentPage < totalPages) {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n  };\n\n  const handleScroll = async () => {\n    const { scrollTop, clientHeight, scrollHeight } = document.documentElement;\n\n    if (scrollTop + clientHeight >= scrollHeight - 10) {\n      window.removeEventListener(\"scroll\", handleScroll);\n      currentPage++;\n      const genres = await fetchGenres();\n      const popularMoviesData = await fetchPopularData(currentPage);\n      const movies = popularMoviesData.results.map(movie => {\n        const movieGenresIds = movie.genre_ids;\n        const matchedGenres = [];\n        for (let i = 0; i < movieGenresIds.length; i++) {\n          for (let j = 0; j < genres.length; j++) {\n            if (movieGenresIds[i] === genres[j].id) {\n              matchedGenres.push(genres[j].name);\n            }\n          }\n        }\n        movie.genres = matchedGenres;\n        return movie;\n      });\n      popularMovies(movies);\n      if (currentPage < totalPages) {\n        window.addEventListener(\"scroll\", handleScroll);\n      }\n    }\n  };\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n\n      const posterSrc = movie.poster_path\n        ? `${IMG_URL}${movie.poster_path}`\n        : \"https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-1-scaled-1150x647.png\";\n      const posterAlt = movie.poster_path\n        ? movie.original_title\n        : \"Poster Not Found\";\n\n      card.innerHTML = `\n        <div id=\"card\" class=\"card\" >\n          <img class=\"card__poster\" src=\"${posterSrc}\" alt=\"${posterAlt}\" title=\"${\n        movie.original_title\n      }\" />\n        </div>\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n          </div>\n        </div>`;\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n\n      moviesContainerEl.appendChild(card);\n\n      // ================================ SHOW MODAL ================================\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n      const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        const posterSrc = movie.poster_path\n          ? `${IMG_URL}${movie.poster_path}`\n          : \"https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-1-scaled-1150x647.png\";\n        const posterAlt = movie.poster_path\n          ? movie.original_title\n          : \"Poster Not Found\";\n        imageEl.innerHTML = `<img class=\"posters__img\" src=\"${posterSrc}\" alt=\"${posterAlt}\"/>`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n        const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n\n        addWatchBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToWatch(movie)\n        );\n\n        addQueueBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToQueue(movie)\n        );\n\n        // ================================ HIDE MODAL ================================\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n      };\n    });\n  };\n\n  await matchGenres();\n};\nfetchMostPopular();\n","export class UserMovies {\n  #watched = [];\n  #queued = [];\n\n  constructor() {\n    const watched = JSON.parse(localStorage.getItem(\"watched-movies\"));\n    const queued = JSON.parse(localStorage.getItem(\"queued-movies\"));\n\n    if (watched) {\n      this.#watched = watched;\n    } else {\n      this.#watched = [];\n    }\n\n    if (queued) {\n      this.#queued = queued;\n    } else {\n      this.#queued = [];\n    }\n  }\n\n  get watched() {\n    return this.#watched;\n  }\n\n  get queued() {\n    return this.#queued;\n  }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToWatch(element) {\n    if (this.isAdded(element, this.#watched)) {\n      this.#watched.push(element);\n      localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n    }\n  }\n\n  addToQueue(element) {\n    if (this.isAdded(element, this.#queued)) {\n      this.#queued.push(element);\n      localStorage.setItem(\"queued-movies\", JSON.stringify(this.#queued));\n    }\n  }\n}\n","export const genres = [\n  { id: 28, name: \"Action\" },\n  { id: 12, name: \"Adventure\" },\n  { id: 16, name: \"Animation\" },\n  { id: 35, name: \"Comedy\" },\n  { id: 80, name: \"Crime\" },\n  { id: 99, name: \"Documentary\" },\n  { id: 18, name: \"Drama\" },\n  { id: 10751, name: \"Family\" },\n  { id: 14, name: \"Fantasy\" },\n  { id: 36, name: \"History\" },\n  { id: 27, name: \"Horror\" },\n  { id: 10402, name: \"Music\" },\n  { id: 9648, name: \"Mystery\" },\n  { id: 10749, name: \"Romance\" },\n  { id: 878, name: \"Science Fiction\" },\n  { id: 10770, name: \"TV Movie\" },\n  { id: 53, name: \"Thriller\" },\n  { id: 10752, name: \"War\" },\n  { id: 37, name: \"Western\" },\n];\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { UserMovies } from \"./local-storage\";\nimport { genres } from \"./genres\";\n\nconst userMovies = new UserMovies();\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\nconst API_URL = `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc&api_key=${API_KEY}`;\n\nconst form = document.querySelector(\"#form\");\nconst search = document.querySelector(\"#search\");\nconst moviesContainerEl = document.querySelector(\".movies-container\");\n\ngetMovies(API_URL);\n\nasync function getMovies(url) {\n  try {\n    const res = await fetch(url);\n    if (!res.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await res.json();\n    showMovies(data.results);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    const {\n      original_title,\n      poster_path,\n      vote_average,\n      release_date,\n      genre_ids,\n    } = movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    const movieGenres = genre_ids\n      .map(genreId => genres.find(genre => genre.id === genreId).name)\n      .join(\", \");\n\n    // Sprawdź, czy poster_path istnieje\n    const posterSrc = poster_path\n      ? `${IMG_URL}${poster_path}`\n      : \"https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-1-scaled-1150x647.png\";\n    const posterAlt = poster_path ? original_title : \"Poster Not Found\";\n\n    movieEl.innerHTML = `\n  <div id=\"card\" class=\"card\">\n    <img class=\"card__poster\" src=\"${posterSrc}\" alt=\"${posterAlt}\" title=\"${original_title}\" />\n    <div class=\"card__content\">\n      <div class=\"card__info\">\n        <div class=\"card__title\">${original_title}</div>\n        <div class=\"card__genre\">${movieGenres} |</div>\n        <div class=\"card__release\">${release_date.slice(0, 4)} </div>\n      </div>\n    </div>\n  </div>`;\n\n    moviesContainerEl.appendChild(movieEl);\n\n    // ================================ SHOW MODAL ================================\n\n    movieEl.addEventListener(\"click\", () => {\n      modalBoxShow(movie);\n    });\n\n    const modalBoxShow = movie => {\n      const popupEl = document.querySelector(\".backdrop\");\n      const closeBtnEl = document.querySelector(\".modal__btn-close\");\n      const imageEl = document.querySelector(\".modal__photo\");\n      const titleEl = document.querySelector(\".modal__title\");\n      const voteEl = document.querySelector(\".modal__stats-vote\");\n      const votesEl = document.querySelector(\".modal__stats-votes\");\n      const popularityEl = document.querySelector(\".modal__popularity\");\n      const originalTitleEl = document.querySelector(\".modal__film-title\");\n      const genreEl = document.querySelector(\".modal__genre\");\n      const aboutEl = document.querySelector(\".modal__about-text\");\n\n      popupEl.classList.remove(\"is-hidden\");\n      const posterSrc = movie.poster_path\n        ? `${IMG_URL}${movie.poster_path}`\n        : \"https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-1-scaled-1150x647.png\";\n      const posterAlt = movie.poster_path\n        ? movie.original_title\n        : \"Poster Not Found\";\n      imageEl.innerHTML = `<img class=\"posters__img\" src=\"${posterSrc}\" alt=\"${posterAlt}\"/>`;\n      titleEl.innerHTML = `${movie.original_title}`;\n      voteEl.innerHTML = `${movie.vote_average}`;\n      votesEl.innerHTML = `${movie.vote_count}`;\n      popularityEl.innerHTML = `${movie.popularity}`;\n      originalTitleEl.innerHTML = `${movie.original_title}`;\n      genreEl.innerHTML = `${movieGenres}`;\n      aboutEl.innerHTML = `${movie.overview}`;\n\n      const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n      const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n\n      addWatchBtnEl.addEventListener(\"click\", () =>\n        userMovies.addToWatch(movie)\n      );\n\n      addQueueBtnEl.addEventListener(\"click\", () =>\n        userMovies.addToQueue(movie)\n      );\n\n      // ================================ HIDE MODAL ================================\n\n      closeBtnEl.addEventListener(\"click\", () => {\n        popupEl.classList.add(\"is-hidden\");\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n\n      window.addEventListener(\"click\", e => {\n        if (e.target.classList.contains(\"backdrop\")) {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n    };\n  });\n}\n\nform.addEventListener(\"input\", () => {\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    const searchUrl = SEARCH_API + searchTerm;\n    getMovies(searchUrl);\n  } else {\n    window.location.reload();\n  }\n});\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"flex\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"none\";\n};\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$3479m","parcelRequire","$80b576907cf5d791$export$bb14b612593d57f7","watched","queued","constructor","JSON","parse","localStorage","getItem","this","isAdded","element","array","i","length","id","addToWatch","push","setItem","stringify","addToQueue","$bc36aade2b53bb55$export$be3a0ca764f9df2b","name","$e240c31068c50c0a$var$userMovies","$e240c31068c50c0a$var$SEARCH_API","URL","API_KEY","$e240c31068c50c0a$var$API_URL","LANGUAGE","$e240c31068c50c0a$var$form","document","querySelector","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","async","$e240c31068c50c0a$var$getMovies","url","res","fetch","ok","Error","data","json","movies","results","innerHTML","forEach","movie","original_title","poster_path","vote_average","release_date","genre_ids","movieEl","createElement","classList","add","movieGenres","map","genreId","find","genre","join","posterSrc","IMG_URL","posterAlt","slice","appendChild","addEventListener","modalBoxShow","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","remove","vote_count","popularity","overview","addWatchBtnEl","addQueueBtnEl","window","e","key","target","contains","error","console","searchTerm","value","location","reload","$63b7bc300d1cc0b1$var$userMovies","currentPage","totalPages","options","method","headers","accept","Authorization","fetchPopularData","page","style","display","response","fetchGenres","genres","handleScroll","scrollTop","clientHeight","scrollHeight","documentElement","removeEventListener","movieGenresIds","matchedGenres","j","popularMovies","card","className","popularMoviesData","total_pages","matchGenres","$63b7bc300d1cc0b1$export$a5868ac4057d47f8"],"version":3,"file":"index.66971c39.js.map"}