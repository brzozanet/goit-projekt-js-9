{"mappings":"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","sources":["src/js/setup.js","src/js/most-popular.js","src/js/local-storage.js","src/js/loading-spinner.js","src/js/genres.js","src/js/search-box.js","src/js/app.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport { UserMovies } from \"./local-storage\";\n\nconst userMovies = new UserMovies();\n\nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n\n    if (currentPage < totalPages) {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n  };\n\n  const handleScroll = async () => {\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight\n    } = document.documentElement;\n    \n    if (scrollTop + clientHeight >= scrollHeight - 10) {\n      window.removeEventListener(\"scroll\", handleScroll);\n      currentPage++;\n      const genres = await fetchGenres();\n      const popularMoviesData = await fetchPopularData(currentPage);\n      const movies = popularMoviesData.results.map(movie => {\n        const movieGenresIds = movie.genre_ids;\n        const matchedGenres = [];\n        for (let i = 0; i < movieGenresIds.length; i++) {\n          for (let j = 0; j < genres.length; j++) {\n            if (movieGenresIds[i] === genres[j].id) {\n              matchedGenres.push(genres[j].name);\n            }\n          }\n        }\n        movie.genres = matchedGenres;\n        return movie;\n      });\n      popularMovies(movies);\n      if (currentPage < totalPages) {\n        window.addEventListener(\"scroll\", handleScroll);\n      }\n    }\n  };\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `\n        <div id=\"card\" class=\"card\" >\n          <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${\n        movie.original_title\n      }\" title=\"${movie.original_title}\" />\n        </div>\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n          </div>\n        </div>`;\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n\n      moviesContainerEl.appendChild(card);\n\n      // show Modal\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n      const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        imageEl.src = `${IMG_URL}${movie.poster_path}`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n        const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n\n        addWatchBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToWatch(movie)\n        );\n        \n        addQueueBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToQueue(movie)\n        );\n\n        // hide Modal\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n      };\n    });\n  };\n\n  // const genres = await fetchGenres();\n  await matchGenres();\n};\n\nfetchMostPopular();\n","export class UserMovies {\n  #watched = [];\n  #queued = [];\n\n  constructor() {\n    const watched = JSON.parse(localStorage.getItem(\"watched-movies\"));\n    const queued = JSON.parse(localStorage.getItem(\"queued-movies\"));\n\n    if (watched) {\n      this.#watched = watched;\n    } else {\n      this.#watched = [];\n    }\n\n    if (queued) {\n      this.#queued = queued;\n    } else {\n      this.#queued = [];\n    }\n  }\n\n  get watched() {\n    return this.#watched;\n  }\n\n  get queued() {\n    return this.#queued;\n  }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToWatch(element) {\n    if (this.isAdded(element, this.#watched)) {\n      this.#watched.push(element);\n      localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n    }\n  }\n\n  addToQueue(element) {\n    if (this.isAdded(element, this.#queued)) {\n      this.#queued.push(element);\n      localStorage.setItem(\"queued-movies\", JSON.stringify(this.#queued));\n    }\n  }\n}\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"inline-block\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"none\";\n};\n","export const genres = [\n  { id: 28, name: \"Action\" },\n  { id: 12, name: \"Adventure\" },\n  { id: 16, name: \"Animation\" },\n  { id: 35, name: \"Comedy\" },\n  { id: 80, name: \"Crime\" },\n  { id: 99, name: \"Documentary\" },\n  { id: 18, name: \"Drama\" },\n  { id: 10751, name: \"Family\" },\n  { id: 14, name: \"Fantasy\" },\n  { id: 36, name: \"History\" },\n  { id: 27, name: \"Horror\" },\n  { id: 10402, name: \"Music\" },\n  { id: 9648, name: \"Mystery\" },\n  { id: 10749, name: \"Romance\" },\n  { id: 878, name: \"Science Fiction\" },\n  { id: 10770, name: \"TV Movie\" },\n  { id: 53, name: \"Thriller\" },\n  { id: 10752, name: \"War\" },\n  { id: 37, name: \"Western\" },\n];\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { genres } from \"./genres\";\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\nconst API_URL = fetch(\n  // `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc`\n  `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc&api_key=${API_KEY}`\n)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n\nconst form = document.getElementById(\"form\");\nconst search = document.getElementById(\"search\");\nconst moviesContainerEl = document.querySelector(\".movies-container\");\n\ngetMovies(API_URL);\n\nasync function getMovies(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  showMovies(data.results);\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    const {\n      original_title,\n      poster_path,\n      vote_average,\n      release_date,\n      genre_ids,\n    } = movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    const movieGenres = genre_ids\n      .map(genreId => genres.find(genre => genre.id === genreId).name)\n      .join(\", \");\n\n    movieEl.innerHTML = `\n      <div id=\"card\" class=\"card\">\n        <img class=\"card__poster\" src=\"${IMG_URL}${poster_path}\" alt=\"${original_title}\" title=\"${original_title}\" />\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${original_title}</div>\n            <div class=\"card__genre\">${movieGenres} |</div>\n            <div class=\"card__release\">${release_date.slice(0, 4)} </div>\n            \n          </div>\n        </div>\n      </div>`;\n\n    moviesContainerEl.appendChild(movieEl);\n\n    // show Moda\n\n    movieEl.addEventListener(\"click\", () => {\n      modalBoxShow(movie);\n    });\n\n    const modalBoxShow = movie => {\n      const popupEl = document.querySelector(\".backdrop\");\n      const closeBtnEl = document.querySelector(\".modal__btn-close\");\n      const imageEl = document.querySelector(\".modal__photo\");\n      const titleEl = document.querySelector(\".modal__title\");\n      const voteEl = document.querySelector(\".modal__stats-vote\");\n      const votesEl = document.querySelector(\".modal__stats-votes\");\n      const popularityEl = document.querySelector(\".modal__popularity\");\n      const originalTitleEl = document.querySelector(\".modal__film-title\");\n      const genreEl = document.querySelector(\".modal__genre\");\n      const aboutEl = document.querySelector(\".modal__about-text\");\n\n      popupEl.classList.remove(\"is-hidden\");\n      imageEl.src = `${IMG_URL}${movie.poster_path}`;\n      titleEl.innerHTML = `${movie.original_title}`;\n      voteEl.innerHTML = `${movie.vote_average}`;\n      votesEl.innerHTML = `${movie.vote_count}`;\n      popularityEl.innerHTML = `${movie.popularity}`;\n      originalTitleEl.innerHTML = `${movie.original_title}`;\n      genreEl.innerHTML = `${movieGenres}`;\n      aboutEl.innerHTML = `${movie.overview}`;\n\n      closeBtnEl.addEventListener(\"click\", () => {\n        popupEl.classList.add(\"is-hidden\");\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n\n      window.addEventListener(\"keyup\", e => {\n        if (e.key === \"Escape\") {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n\n      window.addEventListener(\"click\", e => {\n        if (e.target.classList.contains(\"backdrop\")) {\n          popupEl.classList.add(\"is-hidden\");\n        }\n      });\n    };\n  });\n}\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    getMovies(SEARCH_API + searchTerm);\n\n    search.value = \"\";\n  } else {\n    window.location.reload();\n  }\n});\n","import \"../sass/main.scss\";\nimport { fetchMostPopular } from \"./most-popular\";\nimport { toggleWatched, toggleQueue } from \"./modal\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport \"./search-box\";\n\nfetchMostPopular();\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$3479m","parcelRequire","$1542779201f52248$var$userMovies","watched","queued","constructor","JSON","parse","localStorage","getItem","this","isAdded","element","array","i","length","id","addToWatch","push","setItem","stringify","addToQueue","$1542779201f52248$export$a5868ac4057d47f8","async","currentPage","totalPages","options","method","headers","accept","Authorization","API_KEY","fetchPopularData","page","document","querySelector","style","display","response","fetch","URL","LANGUAGE","data","json","error","console","fetchGenres","genres","handleScroll","scrollTop","clientHeight","scrollHeight","documentElement","window","removeEventListener","movies","results","map","movie","movieGenresIds","genre_ids","matchedGenres","j","name","popularMovies","addEventListener","forEach","card","createElement","className","innerHTML","IMG_URL","poster_path","original_title","join","release_date","slice","appendChild","modalBoxShow","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","classList","remove","src","vote_average","vote_count","popularity","overview","addWatchBtnEl","addQueueBtnEl","add","e","key","target","contains","popularMoviesData","total_pages","matchGenres","$bc36aade2b53bb55$export$be3a0ca764f9df2b","$e240c31068c50c0a$var$SEARCH_API","$e240c31068c50c0a$var$API_URL","then","log","catch","err","$e240c31068c50c0a$var$form","getElementById","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","$e240c31068c50c0a$var$getMovies","url","res","movieEl","movieGenres","genreId","find","genre","event","preventDefault","searchTerm","value","location","reload"],"version":3,"file":"index.e9fda794.js.map"}