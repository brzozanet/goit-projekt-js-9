{"mappings":"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","sources":["src/js/setup.js","src/js/loading-spinner.js","src/js/local-storage.js","src/js/modal.js","src/js/genres.js","src/js/search-box.js","src/js/app.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n\n  if (!spinnerEl) return;\n  spinnerEl.style.display = \"block\";\n  // spinnerEl.style.display = \"flex\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  if (!spinnerEl) return;\n  spinnerEl.style.display = \"none\";\n};\n","export class UserMovies {\n  #watched = [];\n  #queued = [];\n\n  constructor() {\n    const watched = JSON.parse(localStorage.getItem(\"watched-movies\"));\n    const queued = JSON.parse(localStorage.getItem(\"queued-movies\"));\n\n    if (watched) {\n      this.#watched = watched;\n    } else {\n      this.#watched = [];\n    }\n\n    if (queued) {\n      this.#queued = queued;\n    } else {\n      this.#queued = [];\n    }\n  }\n\n  get watched() {\n    return this.#watched;\n  }\n\n  get queued() {\n    return this.#queued;\n  }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToWatch(element) {\n    if (this.isAdded(element, this.#watched)) {\n      this.#watched.push(element);\n      localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n    }\n  }\n\n  addToQueue(element) {\n    if (this.isAdded(element, this.#queued)) {\n      this.#queued.push(element);\n      localStorage.setItem(\"queued-movies\", JSON.stringify(this.#queued));\n    }\n  }\n}\n","import { IMG_URL } from \"./setup\";\nimport { UserMovies } from \"./local-storage\";\nconst userMovies = new UserMovies();\nexport const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        imageEl.src = `${IMG_URL}${movie.poster_path}`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n        const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n\n        addWatchBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToWatch(movie)\n        );\n\n        addQueueBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToQueue(movie)\n        );\n\n        // ================================ HIDE MODAL ================================\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n      };","export const genres = [\n  { id: 28, name: \"Action\" },\n  { id: 12, name: \"Adventure\" },\n  { id: 16, name: \"Animation\" },\n  { id: 35, name: \"Comedy\" },\n  { id: 80, name: \"Crime\" },\n  { id: 99, name: \"Documentary\" },\n  { id: 18, name: \"Drama\" },\n  { id: 10751, name: \"Family\" },\n  { id: 14, name: \"Fantasy\" },\n  { id: 36, name: \"History\" },\n  { id: 27, name: \"Horror\" },\n  { id: 10402, name: \"Music\" },\n  { id: 9648, name: \"Mystery\" },\n  { id: 10749, name: \"Romance\" },\n  { id: 878, name: \"Science Fiction\" },\n  { id: 10770, name: \"TV Movie\" },\n  { id: 53, name: \"Thriller\" },\n  { id: 10752, name: \"War\" },\n  { id: 37, name: \"Western\" },\n];\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { UserMovies } from \"./local-storage\";\nimport { genres } from \"./genres\";\nimport { modalBoxShow } from \"./modal\";\n\nconst userMovies = new UserMovies();\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\n\nconst API_URL = `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc&api_key=${API_KEY}`;\n\nconst form = document.querySelector(\"#form\");\nconst search = document.querySelector(\"#search\");\nconst moviesContainerEl = document.querySelector(\".movies-container\");\n\n\nasync function getMovies(url) {\n  try {\n    const res = await fetch(url);\n    if (!res.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await res.json();\n    showMovies(data.results);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    const {\n      original_title,\n      poster_path,\n      vote_average,\n      release_date,\n      genre_ids,\n    } = movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    const movieGenres = genre_ids\n      .map(genreId => genres.find(genre => genre.id === genreId).name)\n      .join(\", \");\n\n    // Sprawdź, czy poster_path istnieje\n    const posterSrc = poster_path\n      ? `${IMG_URL}${poster_path}`\n      : \"https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-1-scaled-1150x647.png\";\n    const posterAlt = poster_path ? original_title : \"Poster Not Found\";\n\n    movieEl.innerHTML = `\n  <div id=\"card\" class=\"card\">\n    <img class=\"card__poster\" src=\"${posterSrc}\" alt=\"${posterAlt}\" title=\"${original_title}\" />\n    <div class=\"card__content\">\n      <div class=\"card__info\">\n        <div class=\"card__title\">${original_title}</div>\n        <div class=\"card__genre\">${movieGenres} |</div>\n        <div class=\"card__release\">${release_date.slice(0, 4)} </div>\n      </div>\n    </div>\n  </div>`;\n\n    moviesContainerEl.appendChild(movieEl);\n\n    // ================================ SHOW MODAL ================================\n\n    movieEl.addEventListener(\"click\", () => {\n      modalBoxShow(movie);\n    });\n\n  });\n}\nif (form !== null) \nform.addEventListener(\"input\", () => {\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    const searchUrl = SEARCH_API + searchTerm;\n    getMovies(searchUrl);\n  } else {\n    window.location.reload();\n  }\n});\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport { UserMovies } from \"./local-storage\";\nimport { modalBoxShow } from \"./modal\";\nimport \"./search-box\";\n\n\n\nconst userMovies = new UserMovies();\n\n  \nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n\n    if (currentPage < totalPages) {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n  };\n\n  const handleScroll = async () => {\n    const { scrollTop, clientHeight, scrollHeight } = document.documentElement;\n\n    if (scrollTop + clientHeight >= scrollHeight - 10) {\n      window.removeEventListener(\"scroll\", handleScroll);\n      currentPage++;\n      const genres = await fetchGenres();\n      const popularMoviesData = await fetchPopularData(currentPage);\n      const movies = popularMoviesData.results.map(movie => {\n        const movieGenresIds = movie.genre_ids;\n        const matchedGenres = [];\n        for (let i = 0; i < movieGenresIds.length; i++) {\n          for (let j = 0; j < genres.length; j++) {\n            if (movieGenresIds[i] === genres[j].id) {\n              matchedGenres.push(genres[j].name);\n            }\n          }\n        }\n        movie.genres = matchedGenres;\n        return movie;\n      });\n      popularMovies(movies);\n      if (currentPage < totalPages) {\n        window.addEventListener(\"scroll\", handleScroll);\n      }\n    }\n  };\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n\n      const posterSrc = movie.poster_path\n        ? `${IMG_URL}${movie.poster_path}`\n        : \"https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-1-scaled-1150x647.png\";\n      const posterAlt = movie.poster_path\n        ? movie.original_title\n        : \"Poster Not Found\";\n\n      card.innerHTML = `\n        <div id=\"card\" class=\"card\" >\n          <img class=\"card__poster\" src=\"${posterSrc}\" alt=\"${posterAlt}\" title=\"${\n        movie.original_title\n      }\" />\n        </div>\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n          </div>\n        </div>`;\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n      if (!moviesContainerEl) return;\n      console.log(\"tekst\")\n      moviesContainerEl.appendChild(card);\n\n      // ================================ SHOW MODAL ================================\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n    });\n  };\n\n  await matchGenres();\n};\nfetchMostPopular();\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$b7ab326d62d4c916$export$2a7a135fa1ec651f","spinnerEl","document","querySelector","style","display","$b7ab326d62d4c916$export$95fec50f68454318","$80b576907cf5d791$export$bb14b612593d57f7","watched","queued","constructor","JSON","parse","localStorage","getItem","this","isAdded","element","array","i","length","id","addToWatch","push","setItem","stringify","addToQueue","$2ea800676e6f7669$var$userMovies","$2ea800676e6f7669$export$988bc7e2c1f1d15f","movie","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","classList","remove","src","poster_path","innerHTML","original_title","vote_average","vote_count","popularity","genres","join","overview","addWatchBtnEl","addQueueBtnEl","addEventListener","add","window","e","key","target","contains","$bc36aade2b53bb55$export$be3a0ca764f9df2b","name","$e240c31068c50c0a$var$SEARCH_API","$e240c31068c50c0a$var$form","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","async","$e240c31068c50c0a$var$getMovies","url","res","fetch","ok","Error","data","json","movies","results","forEach","release_date","genre_ids","movieEl","createElement","movieGenres","map","genreId","find","genre","posterSrc","posterAlt","slice","appendChild","error","console","searchTerm","value","location","reload","currentPage","totalPages","options","method","headers","accept","Authorization","fetchPopularData","page","response","fetchGenres","handleScroll","scrollTop","clientHeight","scrollHeight","documentElement","removeEventListener","movieGenresIds","matchedGenres","j","popularMovies","card","className","moviesContainerEl","log","popularMoviesData","total_pages","matchGenres","$63b7bc300d1cc0b1$export$a5868ac4057d47f8"],"version":3,"file":"index.36bd943d.js.map"}