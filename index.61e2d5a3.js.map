{"mappings":"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","sources":["src/js/setup.js","src/js/modal.js","src/js/search-box.js","src/js/most-popular.js","src/js/loading-spinner.js","src/js/app.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","export { toggleWatched, toggleQueue };\n\nwindow.addEventListener(\"load\", () => {\n  document\n    .querySelector(\"#modal__button-watched\")\n    .addEventListener(\"click\", toggleWatched);\n  document\n    .querySelector(\"#modal__button-queue\")\n    .addEventListener(\"click\", toggleQueue);\n});\n\nfunction toggleWatched() {\n  document\n    .querySelector(\"#modal__button-watched\")\n    .classList.toggle(\"button-active\");\n  if (\n    document\n      .querySelector(\"#modal__button-watched\")\n      .classList.contains(\"button-active\")\n  ) {\n    document.querySelector(\"#modal__button-watched\").textContent =\n      \"Remove from watched\";\n  } else {\n    document.querySelector(\"#modal__button-watched\").textContent =\n      \"Add to watched\";\n  }\n}\n\nfunction toggleQueue() {\n  document\n    .querySelector(\"#modal__button-queue\")\n    .classList.toggle(\"button-active\");\n  if (\n    document\n      .querySelector(\"#modal__button-queue\")\n      .classList.contains(\"button-active\")\n  ) {\n    document.querySelector(\"#modal__button-queue\").textContent =\n      \"Remove from queue\";\n  } else {\n    document.querySelector(\"#modal__button-queue\").textContent = \"Add to queue\";\n  }\n}\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\nconst API_URL = fetch(\n  `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc`\n)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n\nconst form = document.getElementById(\"form\");\nconst search = document.getElementById(\"search\");\nconst moviesContainerEl = document.querySelector(\"#movies-container-index\");\n\ngetMovies(API_URL);\n\nasync function getMovies(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  showMovies(data.results);\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    const { original_title, poster_path, vote_average, release_date, genres } = movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    movieEl.innerHTML = `\n      <div id=\"card\" class=\"card\">\n        <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${movie.original_title}\" title=\"${movie.original_title}\" />\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)} |</div>\n            <div class=\"card__rating\">Rating: ${movie.vote_average}</div>\n          </div>\n        </div>\n      </div>`;\n\n    moviesContainerEl.appendChild(movieEl);\n  });\n}\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    getMovies(SEARCH_API + searchTerm);\n\n    search.value = \"\";\n  } else {\n    window.location.reload();\n  }\n});\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\n\nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  // const moviesPerPage = 20;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  // const moviesContainerEl = document.querySelector(\"#gallery\");\n  const showMoreButtonEl = document.querySelector(\".show-more\");\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n\n    if (currentPage < totalPages) {\n      showMoreButtonEl.style.display = \"block\";\n    } else {\n      showMoreButtonEl.style.display = \"none\";\n    }\n  };\n\n  const showMoreMovies = async () => {\n    currentPage++;\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    if (currentPage === totalPages) {\n      showMoreButtonEl.style.display = \"none\";\n    }\n  };\n\n  showMoreButtonEl.addEventListener(\"click\", showMoreMovies);\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `\n        <div id=\"card\" class=\"card\" >\n          <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${movie.original_title}\" title=\"${movie.original_title}\" />\n        </div>\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n          </div>\n        </div>`;\n      // const modalEL = document.getElementById(\"modalBox\");\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n\n      moviesContainerEl.appendChild(card);\n      moviesContainerEl.classList.remove(\"hidden\");\n\n      // show Modal\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n      const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        moviesContainerEl.classList.add(\"hidden\");\n        imageEl.src = `${IMG_URL}${movie.poster_path}`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        // hide Modal\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hidden\");\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hidden\");\n          }\n        });\n        \n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hidden\");\n          }\n        });\n      };\n    });\n  };\n\n  // const genres = await fetchGenres();\n  await matchGenres();\n};\n\n// fetchMostPopular();\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"inline-block\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"none\";\n};\n","import \"../sass/main.scss\";\nimport { fetchMostPopular } from \"./most-popular\";\nimport { toggleWatched, toggleQueue } from \"./modal\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport \"./search-box\";\n\nfetchMostPopular();\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$2ea800676e6f7669$export$db8da8110682733b","document","querySelector","classList","toggle","contains","textContent","$2ea800676e6f7669$export$c6104e1232c627ca","window","addEventListener","$e240c31068c50c0a$var$SEARCH_API","$e240c31068c50c0a$var$API_URL","fetch","then","response","json","console","log","catch","err","error","$e240c31068c50c0a$var$form","getElementById","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","async","$e240c31068c50c0a$var$getMovies","url","res","data","movies","results","innerHTML","forEach","movie","original_title","poster_path","vote_average","release_date","genres","movieEl","createElement","add","slice","appendChild","event","preventDefault","searchTerm","value","location","reload","currentPage","totalPages","options","method","headers","accept","Authorization","showMoreButtonEl","fetchPopularData","page","style","display","map","movieGenresIds","genre_ids","matchedGenres","i","length","j","id","push","name","popularMovies","card","className","join","moviesContainerEl","remove","modalBoxShow","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","src","vote_count","popularity","overview","e","key","target","genres1","fetchGenres","popularMoviesData","total_pages","matchGenres"],"version":3,"file":"index.61e2d5a3.js.map"}