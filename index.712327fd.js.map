{"mappings":"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","sources":["src/js/setup.js","src/js/most-popular.js","src/js/local-storage.js","src/js/search-box.js","src/js/loading-spinner.js","src/js/app.js"],"sourcesContent":["export const API_KEY = \"bf096adfc02b1d9503cca39671f19618\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nexport const URL = \"https://api.themoviedb.org/3/\";\nexport const LANGUAGE = \"en-US\";\n","import { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport { UserMovies } from \"./local-storage\";\n\nexport const userMovies = new UserMovies();\n\nexport const fetchMostPopular = async () => {\n  let currentPage = 1;\n  // const moviesPerPage = 20;\n  let totalPages = 0;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  };\n\n  // const moviesContainerEl = document.querySelector(\"#gallery\");\n  const showMoreButtonEl = document.querySelector(\".show-more\");\n\n  const fetchPopularData = async page => {\n    try {\n      showSpinner();\n      const response = await fetch(\n        `${URL}movie/popular?language=${LANGUAGE}&page=${page}&api_key=${API_KEY}`,\n        options\n      );\n      const data = await response.json();\n      hideSpinner();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\n        `${URL}genre/movie/list?api_key=${API_KEY}`,\n        options\n      );\n      const genreNames = await response.json();\n      return genreNames.genres;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const matchGenres = async () => {\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n\n    popularMovies(movies);\n    totalPages = popularMoviesData.total_pages;\n    if (currentPage < totalPages) {\n      showMoreButtonEl.style.display = \"block\";\n    } else {\n      showMoreButtonEl.style.display = \"hidden\";\n    }\n  };\n\n  const showMoreMovies = async () => {\n    currentPage++;\n    const genres = await fetchGenres();\n    const popularMoviesData = await fetchPopularData(currentPage);\n    const movies = popularMoviesData.results.map(movie => {\n      const movieGenresIds = movie.genre_ids;\n      const matchedGenres = [];\n      for (let i = 0; i < movieGenresIds.length; i++) {\n        for (let j = 0; j < genres.length; j++) {\n          if (movieGenresIds[i] === genres[j].id) {\n            matchedGenres.push(genres[j].name);\n          }\n        }\n      }\n      movie.genres = matchedGenres;\n      return movie;\n    });\n    popularMovies(movies);\n    if (currentPage === totalPages) {\n      showMoreButtonEl.style.display = \"hidden\";\n    }\n  };\n\n  showMoreButtonEl.addEventListener(\"click\", showMoreMovies);\n\n  const popularMovies = movies => {\n    movies.forEach(movie => {\n      const card = document.createElement(\"div\");\n      card.className = \"card\";\n      card.innerHTML = `\n        <div id=\"card\" class=\"card\" >\n          <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${\n        movie.original_title\n      }\" title=\"${movie.original_title}\" />\n        </div>\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres.join(\", \")} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)}</div>\n          </div>\n        </div>`;\n      // const modalEL = document.getElementById(\"modalBox\");\n\n      const moviesContainerEl = document.querySelector(\"#gallery\");\n\n      moviesContainerEl.appendChild(card);\n      moviesContainerEl.classList.remove(\"hiddenColor\");\n\n      // show Modal\n\n      card.addEventListener(\"click\", () => {\n        modalBoxShow(movie);\n      });\n\n      const modalBoxShow = movie => {\n        const popupEl = document.querySelector(\".backdrop\");\n        const closeBtnEl = document.querySelector(\".modal__btn-close\");\n        const imageEl = document.querySelector(\".modal__photo\");\n        const titleEl = document.querySelector(\".modal__title\");\n        const voteEl = document.querySelector(\".modal__stats-vote\");\n        const votesEl = document.querySelector(\".modal__stats-votes\");\n        const popularityEl = document.querySelector(\".modal__popularity\");\n        const originalTitleEl = document.querySelector(\".modal__film-title\");\n        const genreEl = document.querySelector(\".modal__genre\");\n        const aboutEl = document.querySelector(\".modal__about-text\");\n\n        popupEl.classList.remove(\"is-hidden\");\n        moviesContainerEl.classList.add(\"hiddenColor\");\n        imageEl.src = `${IMG_URL}${movie.poster_path}`;\n        titleEl.innerHTML = `${movie.original_title}`;\n        voteEl.innerHTML = `${movie.vote_average}`;\n        votesEl.innerHTML = `${movie.vote_count}`;\n        popularityEl.innerHTML = `${movie.popularity}`;\n        originalTitleEl.innerHTML = `${movie.original_title}`;\n        genreEl.innerHTML = `${movie.genres.join(\", \")}`;\n        aboutEl.innerHTML = `${movie.overview}`;\n\n        const addWatchBtnEl = document.querySelector(\"#modal__button-watched\");\n        const addQueueBtnEl = document.querySelector(\"#modal__button-queue\");\n        addWatchBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToWatch(movie)\n        );\n        addQueueBtnEl.addEventListener(\"click\", () =>\n          userMovies.addToQueue(movie)\n        );\n\n        // const removeWatchBtnEl = document.querySelector(\"#modal__button-unwatched\");\n        // removeWatchBtnEl.addEventListener(\"click\", () =>\n        //   userMovies.removeFromWatch(movie)\n        // );\n\n        // hide Modal\n\n        closeBtnEl.addEventListener(\"click\", () => {\n          popupEl.classList.add(\"is-hidden\");\n          moviesContainerEl.classList.remove(\"hiddenColor\");\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n          }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n          if (e.key === \"Escape\") {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hiddenColor\");\n          }\n        });\n\n        window.addEventListener(\"click\", e => {\n          if (e.target.classList.contains(\"backdrop\")) {\n            popupEl.classList.add(\"is-hidden\");\n            moviesContainerEl.classList.remove(\"hiddenColor\");\n          }\n        });\n      };\n    });\n  };\n\n  // const genres = await fetchGenres();\n  await matchGenres();\n};\n\n// fetchMostPopular();\n","export class UserMovies {\n  #watched = [];\n  #queued = [];\n\n  constructor() {\n    const watched = JSON.parse(localStorage.getItem(\"watched-movies\"));\n    const queued = JSON.parse(localStorage.getItem(\"queued-movies\"));\n\n    if (watched) {\n      this.#watched = watched;\n    } else {\n      this.#watched = [];\n    }\n\n    if (queued) {\n      this.#queued = queued;\n    } else {\n      this.#queued = [];\n    }\n  }\n\n  get watched() {\n    return this.#watched;\n  }\n\n  get queued() {\n    return this.#queued;\n  }\n\n  isAdded(element, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +element.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  addToWatch(element) {\n    if (this.isAdded(element, this.#watched)) {\n      this.#watched.push(element);\n      localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n    }\n  }\n\n  addToQueue(element) {\n    if (this.isAdded(element, this.#queued)) {\n      this.#queued.push(element);\n      localStorage.setItem(\"queued-movies\", JSON.stringify(this.#queued));\n    }\n  }\n\n  // removeFromWatch(element) {\n  //   if (!this.isAdded(element, this.#watched)) {\n  //     const index = this.#watched.findIndex(movie => movie.id === element.id);\n  //     if (index !== -1) {\n  //       this.#watched.splice(index, 1);\n  //       localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n  //     }\n  //   }\n  // }\n\n  // removeFromWatch(element) {\n  //   const index = this.#watched.findIndex(movie => movie.id === element.id);\n  //   if (index !== -1) {\n  //     this.#watched.splice(index, 1);\n  //     localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n  //   }\n  // }\n\n  // removeFromWatch(element) {\n  //   const updatedWatched = this.#watched.filter(\n  //     movie => movie.id !== element.id\n  //   );\n  //   this.#watched = updatedWatched;\n  //   localStorage.setItem(\"watched-movies\", JSON.stringify(this.#watched));\n  // }\n\n}\n","import \"../sass/main.scss\";\nimport { API_KEY, IMG_URL, URL, LANGUAGE } from \"./setup\";\n\nconst SEARCH_API = `${URL}/search/movie?api_key=${API_KEY}&query=`;\nconst API_URL = fetch(\n  // `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc`\n  `${URL}/discover/movie?include_adult=false&include_video=false&language=${LANGUAGE}&page=1&sort_by=popularity.desc&api_key=${API_KEY}`\n)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n\nconst form = document.getElementById(\"form\");\nconst search = document.getElementById(\"search\");\nconst moviesContainerEl = document.querySelector(\".movies-container\");\n\ngetMovies(API_URL);\n\nasync function getMovies(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  showMovies(data.results);\n}\n\nfunction showMovies(movies) {\n  moviesContainerEl.innerHTML = \"\";\n\n  movies.forEach(movie => {\n    // const { original_title, poster_path, vote_average, release_date, genres } = movie;\n\n    const movieEl = document.createElement(\"div\");\n    movieEl.classList.add(\"card\");\n\n    movieEl.innerHTML = `\n      <div id=\"card\" class=\"card\">\n        <img class=\"card__poster\" src=\"${IMG_URL}${movie.poster_path}\" alt=\"${\n      movie.original_title\n    }\" title=\"${movie.original_title}\" />\n        <div class=\"card__content\">\n          <div class=\"card__info\">\n            <div class=\"card__title\">${movie.original_title}</div>\n            <div class=\"card__genre\">${movie.genres} |</div>\n            <div class=\"card__release\">${movie.release_date.slice(0, 4)} |</div>\n            <div class=\"card__rating\">Rating: ${movie.vote_average}</div>\n          </div>\n        </div>\n      </div>`;\n\n    moviesContainerEl.appendChild(movieEl);\n  });\n}\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm && searchTerm !== \"\") {\n    getMovies(SEARCH_API + searchTerm);\n\n    search.value = \"\";\n  } else {\n    window.location.reload();\n  }\n});\n","export const showSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"inline-block\";\n};\n\nexport const hideSpinner = () => {\n  const spinnerEl = document.querySelector(\".lds-ring\");\n  spinnerEl.style.display = \"none\";\n};\n","import \"../sass/main.scss\";\nimport { fetchMostPopular } from \"./most-popular\";\nimport { toggleWatched, toggleQueue } from \"./modal\";\nimport { showSpinner, hideSpinner } from \"./loading-spinner\";\nimport \"./search-box\";\n\nfetchMostPopular();\n"],"names":["$23b74aa3aeac62a3$export$a9861bd62f48e142","$23b74aa3aeac62a3$export$1d6744690e556718","$23b74aa3aeac62a3$export$61abde59b50deb8e","$23b74aa3aeac62a3$export$a24496dc2b29f9aa","$1542779201f52248$export$83a582a285a10597","watched","queued","constructor","JSON","parse","localStorage","getItem","this","isAdded","element","array","i","length","id","addToWatch","push","setItem","stringify","addToQueue","$e240c31068c50c0a$var$SEARCH_API","$e240c31068c50c0a$var$API_URL","fetch","then","response","json","console","log","catch","err","error","$e240c31068c50c0a$var$form","document","getElementById","$e240c31068c50c0a$var$search","$e240c31068c50c0a$var$moviesContainerEl","querySelector","async","$e240c31068c50c0a$var$getMovies","url","res","data","movies","results","innerHTML","forEach","movie","movieEl","createElement","classList","add","poster_path","original_title","genres","release_date","slice","vote_average","appendChild","addEventListener","event","preventDefault","searchTerm","value","window","location","reload","currentPage","totalPages","options","method","headers","accept","Authorization","showMoreButtonEl","fetchPopularData","page","style","display","fetchGenres","map","movieGenresIds","genre_ids","matchedGenres","j","name","popularMovies","card","className","join","moviesContainerEl","remove","modalBoxShow","popupEl","closeBtnEl","imageEl","titleEl","voteEl","votesEl","popularityEl","originalTitleEl","genreEl","aboutEl","src","vote_count","popularity","overview","addWatchBtnEl","addQueueBtnEl","e","key","target","contains","popularMoviesData","total_pages","matchGenres"],"version":3,"file":"index.712327fd.js.map"}